import { ChevronLeftIcon, ChevronRightIcon } from '@chakra-ui/icons';
import {
  Text,
  ButtonGroup,
  Flex,
  Grid,
  GridItem,
  IconButton,
} from '@chakra-ui/react';
import Head from 'next/head';
import { FC } from 'react';
import { AppLayout } from '../../shared/AppLayout';
import { WEEK_DAYS } from '../../../lib/date/constants';
import type { AnniversariesPropType } from '../../../lib/types/AnniversariesPropType';
import { useCalendar } from '../../../lib/date/useCalendar';
import { useCalendarRouter } from '../../../lib/date/useCalendarRouter';

export const MonthCalendar: FC<AnniversariesPropType> = ({ calendar }) => {
  const { params, goNextMonth, goPrevMonth } = useCalendarRouter();
  const { days } = useCalendar(params.year, params.month);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AppLayout calendar={calendar}>
        <Grid
          templateColumns="repeat(7, 1fr)"
          templateRows="40px 60px repeat(6, 1fr)"
          w="full"
          h="full"
        >
          <GridItem
            colSpan={7}
            display="flex"
            justifyContent="center"
            alignItems="center"
          >
            <Flex
              borderBottom="1px"
              borderColor="gray.100"
              alignItems="center"
              w="full"
            >
              <ButtonGroup>
                <IconButton
                  colorScheme="white"
                  color="GrayText"
                  icon={<ChevronLeftIcon />}
                  aria-label="前月"
                  onClick={goPrevMonth}
                />
                <IconButton
                  colorScheme="white"
                  color="GrayText"
                  icon={<ChevronRightIcon />}
                  aria-label="前月"
                  onClick={goNextMonth}
                />
              </ButtonGroup>
              <Text fontSize="2xl">
                {params.year}年{params.month}月
              </Text>
            </Flex>
          </GridItem>
          {WEEK_DAYS.map((weekDay) => (
            <GridItem
              key={weekDay}
              display="flex"
              justifyContent="center"
              alignItems="center"
              borderLeft="1px"
              borderColor="gray.100"
            >
              <Text fontSize="sm">{weekDay}</Text>
            </GridItem>
          ))}
          {days.map((day, i) => (
            <GridItem
              key={i}
              display="flex"
              justifyContent="center"
              alignItems="flex-start"
              padding="3"
              borderLeft="1px"
              borderBottom="1px"
              borderColor="gray.100"
              {...(day == null || calendar[params.month][day.date()]?.isEmpty
                ? {}
                : {
                    bgColor: 'blue.500',
                    color: 'white',
                  })}
            >
              {day?.date()}
            </GridItem>
          ))}
        </Grid>
      </AppLayout>
    </>
  );
};
