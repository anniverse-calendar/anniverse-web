import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import { Day as Date } from '../../components/Day';
import type { Anniversable } from '../../generated/typechain-types';
import {
  createWeb3Client,
  jsonRpcProvider,
} from '../../shared/functions/createWeb3Client';
import { parseYYYYMMDD } from '../../shared/functions/parseYYYYMMDD';

const Day: NextPage<{
  year: number;
  month: number;
  day: number;
  anniversary: Anniversable.AnniversaryStructOutput;
}> = (params) => {
  return (
    <>
      <Head>
        <title>
          {params.year}月{params.month}月{params.day}日
        </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Date {...params} />
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ params }) => {
  if (params?.yyyymmdd == null) {
    return {
      notFound: true,
    };
  }

  const { yyyymmdd } = params;
  const { year, month, day } = parseYYYYMMDD(yyyymmdd);
  const tokenId = month * 100 + day;
  const client = createWeb3Client(jsonRpcProvider());
  const anniversary = await client.contract.anniversary(tokenId);
  return {
    props: {
      year,
      month,
      day,
      anniversary: {
        name: anniversary.name,
        description: anniversary.description,
        isEmpty: anniversary.isEmpty,
      },
    },
  };
};

export default Day;
